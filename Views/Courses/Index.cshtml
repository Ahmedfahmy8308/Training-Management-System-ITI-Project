@model Training_Management_System_ITI_Project.ViewModels.CourseSearchViewModel

@{
    ViewData["Title"] = "Courses";
}

<h2>Courses Management</h2>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Course</a>
</p>

<form asp-action="Index" method="get" class="mb-3">
    <div class="row">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Search by course name or category..." />
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary" type="submit">Search</button>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <a asp-action="Index" class="btn btn-secondary">Clear</a>
        </div>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Category</th>
                <th>Instructor</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Courses)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Category)</td>
                    <td>@(item.Instructor?.Name ?? "Not Assigned")</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (!Model.Courses.Any())
{
    <div class="alert alert-info">
        <h4>No courses found</h4>
        <p>@(string.IsNullOrEmpty(Model.SearchTerm) ? "No courses have been created yet." : $"No courses match your search for '{Model.SearchTerm}'.")</p>
    </div>
}
